{
    "assignee": null,
    "blocks": [],
    "close_status": null,
    "closed_at": null,
    "closed_by": null,
    "comments": [
        {
            "comment": "> We don't want to touch remote configs that don't point to Fedora's repos.\r\n\r\nI think the most robust way of doing this will be to have a list of sha256sums of remote configs we want to override.  If e.g. they've added a comment we still assume we don't touch it.\r\n\r\nBasically aim to replace the config only for people who have done ISO installs they haven't touched, plus the AH cloud images.\r\n",
            "date_created": "1549471717",
            "edited_on": null,
            "editor": null,
            "id": 552479,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "walters@fedoraproject.org",
                "emails": [
                    "walters@fedoraproject.org",
                    "walters@redhat.com"
                ],
                "fullname": "Colin Walters",
                "name": "walters"
            }
        },
        {
            "comment": "Alternatively, go straight to implementing https://github.com/coreos/fedora-coreos-tracker/issues/143.",
            "date_created": "1549473869",
            "edited_on": null,
            "editor": null,
            "id": 552504,
            "notification": false,
            "parent": null,
            "reactions": {
                "Heart": [
                    "dustymabe"
                ],
                "Thumbs up": [
                    "dustymabe"
                ]
            },
            "user": {
                "default_email": "jlebon@redhat.com",
                "emails": [
                    "jlebon@redhat.com",
                    "jonathan@jlebon.com"
                ],
                "fullname": "Jonathan Lebon",
                "name": "jlebon"
            }
        },
        {
            "comment": "Thinking more on this, I think we might need both. I.e. ship the remote in an RPM, but also ship code to automatically change configs to use the new remote. I think this will also require kickstart modifications to only delete the Anaconda generated config, and not create a new one as well.",
            "date_created": "1549480462",
            "edited_on": null,
            "editor": null,
            "id": 552524,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "jlebon@redhat.com",
                "emails": [
                    "jlebon@redhat.com",
                    "jonathan@jlebon.com"
                ],
                "fullname": "Jonathan Lebon",
                "name": "jlebon"
            }
        },
        {
            "comment": "> Thinking more on this, I think we might need both. I.e. ship the remote in an RPM, but also ship code to automatically change configs to use the new remote.\r\n\r\nI'd rather not. This seems error prone and not something we need to spend time on since everything is already working and this is simply an optimization. New installs will come with the right config by default and upgrades can get updated when people go to rebase and look for instructions. \r\n\r\n\r\n\r\n> I think this will also require kickstart modifications to only delete the Anaconda generated config, and not create a new one as well.\r\n\r\nyeah. We can remove the part that recreates the remote once we are shipping via rpm. \r\n\r\n",
            "date_created": "1549486802",
            "edited_on": null,
            "editor": null,
            "id": 552536,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "dusty@dustymabe.com",
                "emails": [
                    "dusty@dustymabe.com",
                    "dustymabe@redhat.com"
                ],
                "fullname": "Dusty Mabe",
                "name": "dustymabe"
            }
        },
        {
            "comment": "Why ask our whole user base across all the OSTree variants to type things in when we could fix it for them? At the very least, the checksum approach @walters suggested seems pretty safe and should catch the majority of cases, right?",
            "date_created": "1549487584",
            "edited_on": null,
            "editor": null,
            "id": 552537,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "jlebon@redhat.com",
                "emails": [
                    "jlebon@redhat.com",
                    "jonathan@jlebon.com"
                ],
                "fullname": "Jonathan Lebon",
                "name": "jlebon"
            }
        },
        {
            "comment": "Oh I see, you're saying it'll fix itself during the f29 -> f30 rebase because that definitely requires manual typing. Hmm, yeah I guess that does help.",
            "date_created": "1549487682",
            "edited_on": null,
            "editor": null,
            "id": 552538,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "jlebon@redhat.com",
                "emails": [
                    "jlebon@redhat.com",
                    "jonathan@jlebon.com"
                ],
                "fullname": "Jonathan Lebon",
                "name": "jlebon"
            }
        }
    ],
    "content": "In https://github.com/ostreedev/ostree/issues/1541, a new remote config was established for the Fedora OSTree repo. I'm filing this on the Silverblue site since it likely emotionally affects Silverblue users the most, but the fix should apply to all OSTree variants. The new config looks something like this:\r\n\r\n```\r\n[remote \"fedora\"]\r\nurl=https://ostree.fedoraproject.org\r\ngpg-verify=true\r\ngpgkeypath=/etc/pki/rpm-gpg\r\ncontenturl=mirrorlist=https://ostree.fedoraproject.org/mirrorlist\r\n```\r\n\r\nWe now need to figure out a way to update user remotes. Long-term, the plan is to ship this remote config as part of an RPM (see the tracker for this in FCOS: https://github.com/coreos/fedora-coreos-tracker/issues/143).\r\n\r\nCurrent idea is to simply ship a systemd unit that fires on boot to update the remote config if it wasn't modified (which we'll have to determine carefully, since it's written by Anaconda and thus always shows up as \"Added\" in e.g. `ostree admin config-diff`). We don't want to touch remote configs that don't point to Fedora's repos.",
    "custom_fields": [],
    "date_created": "1549471586",
    "depends": [],
    "id": 69,
    "last_updated": "1549487682",
    "milestone": null,
    "priority": null,
    "private": false,
    "status": "Open",
    "tags": [],
    "title": "Design and implement strategy for updating user remote configs",
    "user": {
        "default_email": "jlebon@redhat.com",
        "emails": [
            "jlebon@redhat.com",
            "jonathan@jlebon.com"
        ],
        "fullname": "Jonathan Lebon",
        "name": "jlebon"
    }
}