{
    "assignee": null,
    "blocks": [],
    "close_status": null,
    "closed_at": null,
    "closed_by": null,
    "comments": [
        {
            "comment": "Looking in the pylorax logs, I see:\r\n\r\n    self.arch.buildarch = i686\r\n    self.arch.basearch = i386\r\n    self.arch.libdir = lib\r\n\r\nso that seems to be the problem here: for some reason, lorax got the wrong buildarch set (basearch and libdir are derived from buildarch). Somehow the build still used x86_64 packages, but then lorax did the stripping wrong...",
            "date_created": "1548601002",
            "edited_on": null,
            "editor": null,
            "id": 550916,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "adamwill@fedoraproject.org",
                "emails": [
                    "adamwill",
                    "adamwill@fedoraproject.org",
                    "awilliam@redhat.com"
                ],
                "fullname": "Adam Williamson",
                "name": "adamwill"
            }
        },
        {
            "comment": "thanks @adamwill - from that last comment, do we know where the bug is? ",
            "date_created": "1548643621",
            "edited_on": null,
            "editor": null,
            "id": 550948,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "dusty@dustymabe.com",
                "emails": [
                    "dusty@dustymabe.com",
                    "dustymabe@redhat.com"
                ],
                "fullname": "Dusty Mabe",
                "name": "dustymabe"
            }
        },
        {
            "comment": "Not precisely yet, but I'm working on it :) I'm digging through logs and lorax code to see how it gets set. So far, it looks from [runroot.log](https://kojipkgs.fedoraproject.org/compose/rawhide/Fedora-Rawhide-20190107.n.0/logs/x86_64/Silverblue/ostree_installer-4/runroot.log) like Koji does not pass `--buildarch` to lorax, so I think we hit [this chunk](https://github.com/weldr/lorax/blob/master/src/pylorax/__init__.py#L369) of lorax, which looks like it attempts to kinda autodetect the buildarch based on the arch of the first (non-source) anaconda-core package it finds in the repos available to it...that's as far as I've got so far.",
            "date_created": "1548667976",
            "edited_on": null,
            "editor": null,
            "id": 550957,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "adamwill@fedoraproject.org",
                "emails": [
                    "adamwill",
                    "adamwill@fedoraproject.org",
                    "awilliam@redhat.com"
                ],
                "fullname": "Adam Williamson",
                "name": "adamwill"
            }
        },
        {
            "comment": "So, the lorax command looks like this:\r\n\r\n    lorax --product=Fedora --version=Rawhide --release=20190107.n.0 '--source=http://kojipkgs.fedoraproject.org/compose/rawhide/Fedora-Rawhide-20190107.n.0/work/$basearch/repo' '--source=http://kojipkgs.fedoraproject.org/compose/rawhide/Fedora-Rawhide-20190107.n.0/work/$basearch/comps_repo_Silverblue' --variant=Silverblue --nomacboot --volid=Fedora-SB-ostree-x86_64-rawh --add-template=/mnt/koji/compose/rawhide/Fedora-Rawhide-20190107.n.0/work/x86_64/Silverblue/lorax_templates/ostree-based-installer/lorax-configure-repo.tmpl --add-template=/mnt/koji/compose/rawhide/Fedora-Rawhide-20190107.n.0/work/x86_64/Silverblue/lorax_templates/ostree-based-installer/lorax-embed-repo.tmpl --add-template-var=ostree_install_repo=https://kojipkgs.fedoraproject.org/compose/atomic/repo/ --add-template-var=ostree_update_repo=https://kojipkgs.fedoraproject.org/atomic/repo/ --add-template-var=ostree_osname=fedora-workstation --add-template-var=ostree_oskey=fedora-30-primary --add-template-var=ostree_install_ref=fedora/rawhide/x86_64/silverblue --add-template-var=ostree_update_ref=fedora/rawhide/x86_64/silverblue --logfile=/mnt/koji/compose/rawhide/Fedora-Rawhide-20190107.n.0/logs/x86_64/Silverblue/ostree_installer-4/lorax.log --rootfs-size=8 /mnt/koji/compose/rawhide/Fedora-Rawhide-20190107.n.0/work/x86_64/Silverblue/ostree_installer\r\n\r\nFrom that note the two repos specified:\r\n\r\n* http://kojipkgs.fedoraproject.org/compose/rawhide/Fedora-Rawhide-20190107.n.0/work/$basearch/repo\r\n* http://kojipkgs.fedoraproject.org/compose/rawhide/Fedora-Rawhide-20190107.n.0/work/$basearch/comps_repo_Silverblue\r\n\r\nLooking at those, the second seems to be there solely to provide comps data, its `primary.xml` is tiny, so the first is the main package repo for the lorax run. If we grab the [primary.xml from that repo](https://kojipkgs.fedoraproject.org/compose/rawhide/Fedora-Rawhide-20190107.n.0/work/x86_64/repo/repodata/422579daa3eb6c6854a225758c2c653b9af9202c02e5bb0dd4cf7447a65397fd-primary.xml.gz) and examine it, we see that it contains both i686 and x86_64 anaconda-core packages:\r\n\r\n    [adamw@xps13k tmp]$ grep anaconda-core-30.*rpm 422579daa3eb6c6854a225758c2c653b9af9202c02e5bb0dd4cf7447a65397fd-primary.xml\r\n      <location xml:base=\"file:///mnt/koji/\" href=\"packages/anaconda/30.13/1.fc30/data/signed/cfc659b9/i686/anaconda-core-30.13-1.fc30.i686.rpm\"/>\r\n      <location xml:base=\"file:///mnt/koji/\" href=\"packages/anaconda/30.13/1.fc30/data/signed/cfc659b9/x86_64/anaconda-core-30.13-1.fc30.x86_64.rpm\"/>\r\n\r\nSo I kinda suspect that this is part of the problem. I'm not sure what *changed* here, though, and unfortunately we no longer have a Rawhide compose where Silverblue succeeded available for examination, which makes it harder to tell. It could be that this 'work' repo didn't used to include any packages from a different arch, and that changed somehow. Or it could be that the `q.available()` that lorax's `get_buildarch()` does used to filter out non-native arch packages and no longer does (that seems unlikely, but it's possible). Or it could I guess be that there always were both i686 and x86_64 packages available but `get_buildarch` for some reason used to hit the x86_64 one first, but now hits the i686 one first. Or it could be something else I'm not seeing yet...",
            "date_created": "1548669485",
            "edited_on": null,
            "editor": null,
            "id": 550961,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "adamwill@fedoraproject.org",
                "emails": [
                    "adamwill",
                    "adamwill@fedoraproject.org",
                    "awilliam@redhat.com"
                ],
                "fullname": "Adam Williamson",
                "name": "adamwill"
            }
        },
        {
            "comment": "The work repo for x86_64 has always included multilib packages.",
            "date_created": "1548670324",
            "edited_on": null,
            "editor": null,
            "id": 550970,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "lubomir.sedlar@gmail.com",
                "emails": [
                    "lsedlar@redhat.com",
                    "lubomir.sedlar@gmail.com"
                ],
                "fullname": "Lubom\u00edr Sedl\u00e1\u0159",
                "name": "lsedlar"
            }
        },
        {
            "comment": "Yeah - so my next discovery is: I think Silverblue builds didn't *used* to use that repo. That's presumably what's changed. The F29 composes haven't been garbage-collected yet, so I looked at one of those, and look at its [runroot.log](https://kojipkgs.fedoraproject.org/compose/branched/Fedora-29-20181028.n.0/logs/x86_64/Silverblue/ostree_installer-4/runroot.log): the lorax args are different. It's just this:\r\n\r\n    lorax --product=Fedora --version=29 --release=20181028.n.0 --source=http://kojipkgs.fedoraproject.org/compose/branched/Fedora-29-20181028.n.0/compose/Everything/x86_64/os ...\r\n\r\nThere's no comps repo, and it uses the Everything x86_64 repo, not the work repo.\r\n\r\nSo now I'm trying to find the source of that change.",
            "date_created": "1548670688",
            "edited_on": null,
            "editor": null,
            "id": 550973,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "adamwill@fedoraproject.org",
                "emails": [
                    "adamwill",
                    "adamwill@fedoraproject.org",
                    "awilliam@redhat.com"
                ],
                "fullname": "Adam Williamson",
                "name": "adamwill"
            }
        },
        {
            "comment": "That change is a refactoring in Pungi: instead of waiting for the Everything repo the task can start sooner. This change has been ready for a long time now, but the patches were reverted due to a bug in rpm-ostree/dnf/somewhere that caused issues with source packages. That has been fixed since.\r\n\r\nhttps://pagure.io/pungi/issue/890\r\n\r\nMaybe I need to revert the change again :/ However not being able to deal with a repo with multilib packages is definitely a bug in whatever tools fails to use it.",
            "date_created": "1548673202",
            "edited_on": null,
            "editor": null,
            "id": 550989,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "lubomir.sedlar@gmail.com",
                "emails": [
                    "lsedlar@redhat.com",
                    "lubomir.sedlar@gmail.com"
                ],
                "fullname": "Lubom\u00edr Sedl\u00e1\u0159",
                "name": "lsedlar"
            }
        },
        {
            "comment": "Yeah, I just found [that commit](https://pagure.io/pungi/c/5c081cb5?branch=master). I'm not sure that's the whole story, though, as that change seems to have been put back into the Fedora package on 2018-11-12 and we got a Silverblue in Rawhide as late as 2018-12-01, according to [nightlies](https://www.happyassassin.net/nightlies.html). It definitely explains the difference between that F29 I looked at and current Rawhide, though.\r\n\r\nI can certainly write a patch for lorax to make it handle multilib repos in this case, I really kinda want to spend a bit more time trying to identify what apparently changed on 2018-12-02, though...",
            "date_created": "1548676074",
            "edited_on": null,
            "editor": null,
            "id": 551009,
            "notification": false,
            "parent": null,
            "reactions": {},
            "user": {
                "default_email": "adamwill@fedoraproject.org",
                "emails": [
                    "adamwill",
                    "adamwill@fedoraproject.org",
                    "awilliam@redhat.com"
                ],
                "fullname": "Adam Williamson",
                "name": "adamwill"
            }
        }
    ],
    "content": "I just noticed that Silverblue has not built in Rawhide since (it looks like) 2018-12-01. The current failure looks like this ([full logs](https://kojipkgs.fedoraproject.org/compose/rawhide/Fedora-Rawhide-20190121.n.0/logs/x86_64/Silverblue/ostree_installer-4/)):\r\n\r\n    verifying the installroot\r\n    libgstapp-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libgstbase-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libgstreamer-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libgstpbutils-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libgstaudio-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libgsttag-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libgstvideo-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libgstgl-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libgstfft-1.0.so.0, needed by /usr/bin/gnome-help, not found\r\n    libmetacity.so.1, needed by /usr/bin/metacity, not found\r\n    libvorbisfile.so.3, needed by /usr/bin/metacity, not found\r\n    libvorbisfile.so.3, needed by /usr/bin/metacity, not found\r\n    libvorbisfile.so.3, needed by /usr/bin/canberra-boot, not found\r\n    libgstapp-1.0.so.0, needed by /usr/bin/yelp, not found\r\n    libgstbase-1.0.so.0, needed by /usr/bin/yelp, not found\r\n    libgstreamer-1.0.so.0, needed by /usr/bin/yelp, not found\r\n    libgstpbutils-1.0.so.0, needed by /usr/bin/yelp, not found\r\n    libgstaudio-1.0.so.0, needed by /usr/bin/yelp, not found\r\n    libgsttag-1.0.so.0, needed by /usr/bin/yelp, not found\r\n    libgstvideo-1.0.so.0, needed by /usr/bin/yelp, not found\r\n    libgstgl-1.0.so.0, needed by /usr/bin/yelp, not found\r\n    libgstfft-1.0.so.0, needed by /usr/bin/yelp, not found\r\n\r\nThese are things that `runtime-cleanup.tmpl` is removing, I believe. But I think there's a wrinkle here: I think they're not intended to be removed, but are being removed because lorax thinks `${libdir}` is `lib` when it should be `lib64`. Note this from the logs:\r\n\r\n    removefrom libvorbis --allbut /usr/lib/libvorbisfile.* /usr/lib/libvorbis.*: removed 12/12 files, 2731kb/2731kb\r\n\r\nBut the line in `runtime-cleanup.tmpl` is:\r\n\r\n    removefrom libvorbis --allbut /usr/${libdir}/libvorbisfile.* /usr/${libdir}/libvorbis.*\r\n\r\nTagging @bcl on this, I'll look into it a bit.",
    "custom_fields": [],
    "date_created": "1548600037",
    "depends": [],
    "id": 67,
    "last_updated": "1548673202",
    "milestone": null,
    "priority": null,
    "private": false,
    "status": "Open",
    "tags": [],
    "title": "Silverblue fails to build in Rawhide",
    "user": {
        "default_email": "adamwill@fedoraproject.org",
        "emails": [
            "adamwill",
            "adamwill@fedoraproject.org",
            "awilliam@redhat.com"
        ],
        "fullname": "Adam Williamson",
        "name": "adamwill"
    }
}